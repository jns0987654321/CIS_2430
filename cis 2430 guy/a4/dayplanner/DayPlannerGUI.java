package dayplanner;

/* Import all the Required Classes */
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;

import java.util.*;
import javax.swing.JOptionPane;

/**
 * A Class derived from JFrame to create the GUI for the Day Planner
 * @author Zeeshan Qureshi
 */
public class DayPlannerGUI extends javax.swing.JFrame {

  /** Creates new form DayPlannerGUI */
  public DayPlannerGUI() {
    initComponents();
    setLocationRelativeTo(null);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    fc = new JFileChooser();
    dayPlannerPane = new JTabbedPane();
    commandsPanel = new JPanel();
    jScrollPane1 = new JScrollPane();
    jEditorPane1 = new JEditorPane();
    addPanel = new JPanel();
    jPanel1 = new JPanel();
    jPanel2 = new JPanel();
    jLabel1 = new JLabel();
    addType = new JComboBox();
    jLabel2 = new JLabel();
    addTitle = new JTextField();
    jLabel3 = new JLabel();
    addStartTime = new JTextField();
    jLabel4 = new JLabel();
    addEndTime = new JTextField();
    jLabel5 = new JLabel();
    addComment = new JTextField();
    addLocationPanel = new JPanel();
    jLabel6 = new JLabel();
    addLocation = new JTextField();
    jPanel3 = new JPanel();
    addPanelReset = new JButton();
    addPanelEnter = new JButton();
    jScrollPane2 = new JScrollPane();
    addPanelMesssages = new JTextArea();
    searchPanel = new JPanel();
    jPanel4 = new JPanel();
    jPanel5 = new JPanel();
    jLabel7 = new JLabel();
    searchType = new JComboBox();
    jLabel8 = new JLabel();
    searchTitle = new JTextField();
    jLabel9 = new JLabel();
    searchStartTime = new JTextField();
    jLabel10 = new JLabel();
    searchEndTime = new JTextField();
    jPanel6 = new JPanel();
    searchPanelReset = new JButton();
    searchPanelEnter = new JButton();
    jScrollPane3 = new JScrollPane();
    searchResults = new JTextArea();
    jPanel7 = new JPanel();

    setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    setTitle("Day Planner");

    addWindowListener(new WindowAdapter() {
      public void windowClosing(WindowEvent evt) {
        formWindowClosing(evt);
      }
      public void windowOpened(WindowEvent evt) {
        formWindowOpened(evt);
      }
    });

    dayPlannerPane.setFont(new Font("DejaVu Sans", 1, 16)); // NOI18N
    jEditorPane1.setContentType("text/html");
    jEditorPane1.setEditable(false);
    jEditorPane1.setText("<html>\n  <head>\n  </head>\n  <body>\n    <div style=\"margin: 20px\">\n    <span style=\"font-size: 16px; font-weight: bold\">\n    \tWelcome to Zeeshan's Day Planner\n    </span>\n    <br />\n    <br />\n    <br />\n    <span style=\"font-size: 13px\">\n\tSelect a command from the \"commands\" tab above to <b>add</b> an activity,\n    \t<b>search</b> activites or to <b>quit</b> the program\n    </span>\n    </div>\n  </body>\n</html>\n");
    jScrollPane1.setViewportView(jEditorPane1);

    GroupLayout commandsPanelLayout = new GroupLayout(commandsPanel);
    commandsPanel.setLayout(commandsPanelLayout);
    commandsPanelLayout.setHorizontalGroup(
      commandsPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(commandsPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
        .addContainerGap())
    );
    commandsPanelLayout.setVerticalGroup(
      commandsPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(commandsPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        .addContainerGap())
    );

    dayPlannerPane.addTab("Commands", commandsPanel);

    addPanel.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));

    jPanel1.setBorder(BorderFactory.createTitledBorder("Add an Activity"));
    jPanel1.setPreferredSize(new Dimension(523, 300));

    jLabel1.setText("Type:");

    addType.setModel(new DefaultComboBoxModel(new String[] { "School", "Home", "Other" }));
    addType.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        addTypeActionPerformed(evt);
      }
    });

    jLabel2.setText("Title:");

    jLabel3.setText("Starting TIme (YYYY/MM/DD HH:SS):");

    jLabel4.setText("Ending TIme (YYYY/MM/DD HH:SS):");

    jLabel5.setText("Comment:");

    jLabel6.setText("Location:");

    addLocation.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        addLocationActionPerformed(evt);
      }
    });

    GroupLayout addLocationPanelLayout = new GroupLayout(addLocationPanel);
    addLocationPanel.setLayout(addLocationPanelLayout);
    addLocationPanelLayout.setHorizontalGroup(
      addLocationPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(addLocationPanelLayout.createSequentialGroup()
        .addComponent(jLabel6)
        .addGap(18, 18, 18)
        .addComponent(addLocation, GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
    );
    addLocationPanelLayout.setVerticalGroup(
      addLocationPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(addLocationPanelLayout.createSequentialGroup()
        .addGroup(addLocationPanelLayout.createParallelGroup(Alignment.BASELINE)
          .addComponent(jLabel6)
          .addComponent(addLocation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addContainerGap(23, Short.MAX_VALUE))
    );

    GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING)
          .addComponent(addLocationPanel, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jLabel3, Alignment.LEADING)
          .addGroup(Alignment.LEADING, jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
              .addComponent(jLabel1)
              .addComponent(jLabel2))
            .addGap(18, 18, 18)
            .addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
              .addComponent(addTitle, GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
              .addComponent(addType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
          .addComponent(addStartTime, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
          .addComponent(jLabel4, Alignment.LEADING)
          .addComponent(addEndTime, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
          .addGroup(Alignment.LEADING, jPanel2Layout.createSequentialGroup()
            .addComponent(jLabel5)
            .addGap(18, 18, 18)
            .addComponent(addComment, GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)))
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
          .addComponent(addType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1))
        .addGap(8, 8, 8)
        .addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(addTitle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(addStartTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addGap(12, 12, 12)
        .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(addEndTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(ComponentPlacement.UNRELATED)
        .addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(addComment, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(ComponentPlacement.UNRELATED)
        .addComponent(addLocationPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    );

    addLocationPanel.setVisible(false);

    addPanelReset.setText("Reset");
    addPanelReset.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        addPanelResetActionPerformed(evt);
      }
    });

    addPanelEnter.setText("Enter");
    addPanelEnter.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        addPanelEnterActionPerformed(evt);
      }
    });

    GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
          .addComponent(addPanelReset, Alignment.TRAILING)
          .addComponent(addPanelEnter, Alignment.TRAILING))
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addGap(65, 65, 65)
        .addComponent(addPanelReset)
        .addGap(48, 48, 48)
        .addComponent(addPanelEnter)
        .addContainerGap(114, Short.MAX_VALUE))
    );

    GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGap(18, 18, 18)
        .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING, false)
          .addComponent(jPanel3, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel2, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jScrollPane2.setBorder(BorderFactory.createTitledBorder("Messages"));

    addPanelMesssages.setColumns(20);
    addPanelMesssages.setEditable(false);
    addPanelMesssages.setRows(3);
    jScrollPane2.setViewportView(addPanelMesssages);

    GroupLayout addPanelLayout = new GroupLayout(addPanel);
    addPanel.setLayout(addPanelLayout);
    addPanelLayout.setHorizontalGroup(
      addPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(addPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(addPanelLayout.createParallelGroup(Alignment.LEADING)
          .addComponent(jScrollPane2, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
          .addComponent(jPanel1, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    addPanelLayout.setVerticalGroup(
      addPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(addPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 317, GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
    );

    dayPlannerPane.addTab("Add", addPanel);

    searchPanel.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));

    jPanel4.setBorder(BorderFactory.createTitledBorder("Search Activities"));

    jLabel7.setText("Type:");

    searchType.setModel(new DefaultComboBoxModel(new String[] { "None", "School", "Home", "Other" }));

    jLabel8.setText("Title:");

    jLabel9.setText("Starting TIme (YYYY/MM/DD HH:SS):");

    jLabel10.setText("Ending TIme (YYYY/MM/DD HH:SS):");

    GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
      jPanel5Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel5Layout.createParallelGroup(Alignment.TRAILING)
          .addComponent(jLabel9, Alignment.LEADING)
          .addGroup(Alignment.LEADING, jPanel5Layout.createSequentialGroup()
            .addGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING)
              .addComponent(jLabel7)
              .addComponent(jLabel8))
            .addGap(18, 18, 18)
            .addGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING)
              .addComponent(searchTitle, GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
              .addComponent(searchType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
          .addComponent(searchStartTime, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
          .addComponent(jLabel10, Alignment.LEADING)
          .addComponent(searchEndTime, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        .addContainerGap())
    );
    jPanel5Layout.setVerticalGroup(
      jPanel5Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel5Layout.createParallelGroup(Alignment.BASELINE)
          .addComponent(searchType, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel7))
        .addGap(8, 8, 8)
        .addGroup(jPanel5Layout.createParallelGroup(Alignment.BASELINE)
          .addComponent(jLabel8)
          .addComponent(searchTitle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(searchStartTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addGap(12, 12, 12)
        .addComponent(jLabel10, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(searchEndTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    searchPanelReset.setText("Reset");
    searchPanelReset.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        searchPanelResetActionPerformed(evt);
      }
    });

    searchPanelEnter.setText("Search");
    searchPanelEnter.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        searchPanelEnterActionPerformed(evt);
      }
    });

    GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
      jPanel6Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel6Layout.createSequentialGroup()
        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel6Layout.createParallelGroup(Alignment.LEADING)
          .addComponent(searchPanelReset, Alignment.TRAILING)
          .addComponent(searchPanelEnter, Alignment.TRAILING))
        .addContainerGap())
    );
    jPanel6Layout.setVerticalGroup(
      jPanel6Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(jPanel6Layout.createSequentialGroup()
        .addGap(65, 65, 65)
        .addComponent(searchPanelReset)
        .addGap(48, 48, 48)
        .addComponent(searchPanelEnter)
        .addContainerGap(37, Short.MAX_VALUE))
    );

    GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(Alignment.LEADING)
      .addGroup(Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
        .addComponent(jPanel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(jPanel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(Alignment.LEADING)
      .addComponent(jPanel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jPanel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    jScrollPane3.setBorder(BorderFactory.createTitledBorder("Search Results"));

    searchResults.setColumns(20);
    searchResults.setEditable(false);
    searchResults.setRows(10);
    jScrollPane3.setViewportView(searchResults);

    GroupLayout searchPanelLayout = new GroupLayout(searchPanel);
    searchPanel.setLayout(searchPanelLayout);
    searchPanelLayout.setHorizontalGroup(
      searchPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(searchPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(searchPanelLayout.createParallelGroup(Alignment.LEADING)
          .addComponent(jScrollPane3, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
          .addComponent(jPanel4, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    searchPanelLayout.setVerticalGroup(
      searchPanelLayout.createParallelGroup(Alignment.LEADING)
      .addGroup(Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addPreferredGap(ComponentPlacement.RELATED)
        .addComponent(jScrollPane3, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE))
    );

    dayPlannerPane.addTab("Search", searchPanel);

    jPanel7.addComponentListener(new ComponentAdapter() {
      public void componentShown(ComponentEvent evt) {
        jPanel7ComponentShown(evt);
      }
    });

    GroupLayout jPanel7Layout = new GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
      jPanel7Layout.createParallelGroup(Alignment.LEADING)
      .addGap(0, 549, Short.MAX_VALUE)
    );
    jPanel7Layout.setVerticalGroup(
      jPanel7Layout.createParallelGroup(Alignment.LEADING)
      .addGap(0, 488, Short.MAX_VALUE)
    );

    dayPlannerPane.addTab("Quit", jPanel7);

    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(Alignment.LEADING)
      .addComponent(dayPlannerPane, GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(Alignment.LEADING)
      .addComponent(dayPlannerPane, GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void addPanelEnterActionPerformed(ActionEvent evt) {//GEN-FIRST:event_addPanelEnterActionPerformed
      /* Variables to Store Input */
      Date startTime, endTime;
      char type = ((String) addType.getSelectedItem()).toLowerCase().charAt(0);
      int pos;

      Activity newActivity = null;

      if (addTitle.getText().trim().isEmpty()) {
        addPanelMesssages.setText("Title Cannot Be Blank!!");
        JOptionPane.showMessageDialog(this, "Title Cannot Be Blank!!\nActivity Not Added!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
        return;
      }

      try {
        startTime = DayPlanner.dateParser.parse(addStartTime.getText().trim());
      } catch (java.text.ParseException e) {
        addPanelMesssages.setText("Invalid Start Time!!");
        JOptionPane.showMessageDialog(this, "Invalid Start Time!!\nActivity Not Added!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
        return;
      }

      try {
        endTime = DayPlanner.dateParser.parse(addEndTime.getText().trim());
      } catch (java.text.ParseException e) {
        addPanelMesssages.setText("Invalid End Time!!");
        JOptionPane.showMessageDialog(this, "Invalid End Time!!\nActivity Not Added!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
        return;
      }

      if ((type == 'o') && (addLocation.getText().trim().isEmpty())) {
        addPanelMesssages.setText("Location Cannot Be Blank!!");
        JOptionPane.showMessageDialog(this, "Location Cannot Be Blank!!\nActivity Not Added!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
        return;
      }

      if (endTime.before(startTime)) {
        addPanelMesssages.setText("End Time CANNOT be Before Start Time!!");
        JOptionPane.showMessageDialog(this, "End Time CANNOT be Before Start Time!!\nActivity Not Added!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
        return;
      }

      switch (type) {
        case 'h':
          newActivity = new HomeActivity(addTitle.getText().trim(), startTime, endTime, addComment.getText().trim());
          break;

        case 's':
          newActivity = new SchoolActivity(addTitle.getText().trim(), startTime, endTime, addComment.getText().trim());
          break;

        case 'o':
          newActivity = new OtherActivity(addTitle.getText().trim(), startTime, endTime, addComment.getText().trim(), addLocation.getText().trim());
          break;
      }

      pos = DayPlanner.searchPosition(newActivity);
      if (pos == -1) {
        addPanelMesssages.setText("Starting Time Clashes!!");
        JOptionPane.showMessageDialog(this, "Starting Time Clashes!!\nActivity Not Added!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
        return;
      } else {
        DayPlanner.activityList.add(pos, newActivity);
        DayPlanner.updateIndex(newActivity.getTitle().toLowerCase().split("[ ,\n]+"), pos);
        addPanelMesssages.setText("Activity Added Successfully!!");
      }
    }//GEN-LAST:event_addPanelEnterActionPerformed

    private void addLocationActionPerformed(ActionEvent evt) {//GEN-FIRST:event_addLocationActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_addLocationActionPerformed

    private void addTypeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_addTypeActionPerformed
      JComboBox cb = (JComboBox) evt.getSource();
      String selected = (String) cb.getSelectedItem();

      if (selected.equalsIgnoreCase("other")) {
        addLocationPanel.setVisible(true);
      } else {
        addLocationPanel.setVisible(false);
      }
      jPanel2.validate();
    }//GEN-LAST:event_addTypeActionPerformed

    private void searchPanelEnterActionPerformed(ActionEvent evt) {//GEN-FIRST:event_searchPanelEnterActionPerformed
      /* Variables to Store Input */
      Date startTime = null, endTime = null;
      char type = ((String) searchType.getSelectedItem()).toLowerCase().charAt(0);

      if (!searchStartTime.getText().trim().isEmpty()) {
        try {
          startTime = DayPlanner.dateParser.parse(searchStartTime.getText().trim());
        } catch (java.text.ParseException e) {
          searchResults.setText("Invalid Start Time!!");
          JOptionPane.showMessageDialog(this, "Invalid Start Time!!\nSearch Not Performed!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
          return;
        }
      }

      if (!searchEndTime.getText().trim().isEmpty()) {
        try {
          endTime = DayPlanner.dateParser.parse(searchEndTime.getText().trim());
        } catch (java.text.ParseException e) {
          searchResults.setText("Invalid End Time!!");
          JOptionPane.showMessageDialog(this, "Invalid End Time!!\nSearch Not Performed!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
          return;
        }
      }

      if (endTime != null && startTime != null && endTime.before(startTime)) {
        searchResults.setText("End Time CANNOT be Before Start Time!!");
        JOptionPane.showMessageDialog(this, "End Time CANNOT be Before Start Time!!\nSearch Not Performed!!", "Invalid Input!!", JOptionPane.ERROR_MESSAGE);
        return;
      }

      DayPlanner.performSearch(type, searchTitle.getText().trim().toLowerCase().split("[ ,\n]+"), startTime, endTime);

      searchResults.setText(null);
      for (Activity result : DayPlanner.searchResult) {
        searchResults.append(result + "Type: " + DayPlanner.mapClassToString(result) + " Activity\n\n");
      }
    }//GEN-LAST:event_searchPanelEnterActionPerformed

    private void addPanelResetActionPerformed(ActionEvent evt) {//GEN-FIRST:event_addPanelResetActionPerformed
      for (Object o : jPanel2.getComponents()) {
        if (o instanceof JTextField) {
          ((JTextField) o).setText(null);
        } else if (o instanceof JComboBox) {
          ((JComboBox) o).setSelectedIndex(0);
        }
      }

      addLocation.setText(null);
      addPanelMesssages.setText(null);
    }//GEN-LAST:event_addPanelResetActionPerformed

    private void searchPanelResetActionPerformed(ActionEvent evt) {//GEN-FIRST:event_searchPanelResetActionPerformed
      for (Object o : jPanel5.getComponents()) {
        if (o instanceof JTextField) {
          ((JTextField) o).setText(null);
        } else if (o instanceof JComboBox) {
          ((JComboBox) o).setSelectedIndex(0);
        }
      }

      searchResults.setText(null);
}//GEN-LAST:event_searchPanelResetActionPerformed

    private void formWindowOpened(WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      if (fc.showDialog(this, "Import Activities") == JFileChooser.APPROVE_OPTION) {
        try {
          DayPlanner.readFile(new Scanner(fc.getSelectedFile()));
        } catch (FileNotFoundException e) {
        }
      }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      if (fc.showDialog(this, "Save Activities") == JFileChooser.APPROVE_OPTION) {
        try {
          DayPlanner.writeFile(new PrintWriter(fc.getSelectedFile()));
        } catch (FileNotFoundException e) {
        }
      }
    }//GEN-LAST:event_formWindowClosing

    private void jPanel7ComponentShown(ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
      dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jPanel7ComponentShown

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        new DayPlannerGUI().setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  JTextField addComment;
  JTextField addEndTime;
  JTextField addLocation;
  JPanel addLocationPanel;
  JPanel addPanel;
  JButton addPanelEnter;
  JTextArea addPanelMesssages;
  JButton addPanelReset;
  JTextField addStartTime;
  JTextField addTitle;
  JComboBox addType;
  JPanel commandsPanel;
  JTabbedPane dayPlannerPane;
  JFileChooser fc;
  JEditorPane jEditorPane1;
  JLabel jLabel1;
  JLabel jLabel10;
  JLabel jLabel2;
  JLabel jLabel3;
  JLabel jLabel4;
  JLabel jLabel5;
  JLabel jLabel6;
  JLabel jLabel7;
  JLabel jLabel8;
  JLabel jLabel9;
  JPanel jPanel1;
  JPanel jPanel2;
  JPanel jPanel3;
  JPanel jPanel4;
  JPanel jPanel5;
  JPanel jPanel6;
  JPanel jPanel7;
  JScrollPane jScrollPane1;
  JScrollPane jScrollPane2;
  JScrollPane jScrollPane3;
  JTextField searchEndTime;
  JPanel searchPanel;
  JButton searchPanelEnter;
  JButton searchPanelReset;
  JTextArea searchResults;
  JTextField searchStartTime;
  JTextField searchTitle;
  JComboBox searchType;
  // End of variables declaration//GEN-END:variables
  public static final long serialVersionUID = 10328092L;
}
